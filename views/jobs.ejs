    <!-- This render call is going to load and parse /views/jobs.ejs, passing the array as a local variable to that template. Now you need to construct the table, using EJS code. It will look something like this: -->
        
    <!-- Of course, you also have include statements for the header and footer in this ejs file. You see the conditional JavaScript logic in the EJS brackets <% %>. -->
    <%- include("partials/head.ejs") %>
    <%- include("partials/header.ejs") %>

    <h2>Jobs List</h2>
    <table id="jobs-table">
      <tr id="jobs-table-header">
        <th>Company</th>
        <th>Position</th>
        <th>Status</th>
        <th colspan="2"></th>
      </tr>
      <% if (jobs && jobs.length) { %>
        <% jobs.forEach((job) => { %>
          <tr>
            <td><%= job.company %></td>
            <td><%= job.position %></td>
            <td><%= job.status %></td>
            <!-- <td><button type="button">edit</button></td> -->
            <td><a href="/jobs/edit/<%= job.id %>">
            <button type="button">edit</button></a></td>
            <!-- <td><button type="button">delete</button></td> -->
            <!-- Similarly, for the delete button, you have to build one of those button-only forms described above, and it should have the following as its action attribute:

            action="/jobs/delete/<%= job.id %>"

            So that the actual id of the entry to delete is included in the URL on the POST. -->
            <td><form action="/jobs/delete/<%= job._id %>" method="POST">
                <button type="submit">Delete</button>
                <input type="hidden" name="_csrf" value="<%= _csrf %>">
            </form></td>
          </tr>
        <% }) %>
      <% } %>
    </table>

    <a href="/jobs/new">
    <button type="button">Add New Job</button>
    </a>

    <%- include("partials/footer.ejs") %>